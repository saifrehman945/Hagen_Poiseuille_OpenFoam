/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  6                                     |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     icoFoam;

startFrom       startTime;

startTime       0;

stopAt          endTime;

endTime         20;

deltaT          0.05;

writeControl    runTime;

writeInterval   1;

purgeWrite      0;

writeFormat     ascii;

writePrecision  8;

writeCompression off;

timeFormat      general;

timePrecision   6;

runTimeModifiable true;

// ************************************************************************* //

functions
{

///////////////////////////////////////////////////////////////////////////

    #includeFunc cellMax
        (
            name=maxdomain,
            p,
            U
        )

    #includeFunc cellMin
        (
            name=mindomain,
            p,
            U
        )
    #includeFunc patchFlowRate
        (
            name=inMassFlow,
            patch=inlet,
            phi
        )
    #includeFunc patchFlowRate
        (
            name=outMassFlow,
            patch=outlet,
            phi
        )
    #includeFunc patchFlowRate
        (
            name=inPre,
            patch=inlet,
            operation=average,
            phi,
            U,
            p
        )
    
        // Sampling along line s1
    s1
    {
        type            sets;
        functionObjectLibs ("libsampling.so");
        enabled         true;
        outputControl   timeStep;
        outputInterval  20;
        setFormat       raw;
        interpolationScheme cell;
        fields
        (
            U
            p
        );
        sets
        (
            s1
            {
                type    lineCell;
                axis    x;
                start   (0 0 0);
                end     (10 0 0);
            }
        );
    }

    // Sampling along line s2
    s2
    {
        type            sets;
        functionObjectLibs ("libsampling.so");
        enabled         true;
        outputControl   timeStep;
        outputInterval  20;
        setFormat       raw;
        interpolationScheme cell;
        fields
        (
            U
            p
        );
        sets
        (
            s2
            {
                type    lineCell;
                axis    y;
                start   (9 -1 0);
                end     (9 1 0);
            }
        );
    }
///////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////
// inMassFlow
// {
//     type            surfaceFieldValue;
//     functionObjectLibs ("libfieldFunctionObjects.so");
//     enabled         true;

//     //writeControl     outputTime;
//     writeControl   timeStep;
//     writeInterval  1;

//     log             true;

//     writeFields     false;

//     regionType          patch;
//     name      inlet;

//     operation       sum;

//     fields
//     (
//         phi
//     );
// }
// ///////////////////////////////////////////////////////////////////////////

// ///////////////////////////////////////////////////////////////////////////
// outMassFlow
// {
//     type            surfaceFieldValue;
//     functionObjectLibs ("libfieldFunctionObjects.so");
//     enabled         true;

//     //writeControl     outputTime;
//     writeControl   timeStep;
//     writeInterval  1;

//     log             true;

//     writeFields     false;

//     regionType          patch;
//     name      outlet;

//     operation       sum;

//     fields
//     (
//         phi
//     );
// }
// ///////////////////////////////////////////////////////////////////////////

// ///////////////////////////////////////////////////////////////////////////

// inPre
// {
//     type            surfaceFieldValue;
//     functionObjectLibs ("libfieldFunctionObjects.so");
//     enabled         true;

//     //writeControl     outputTime;
//     writeControl   timeStep;
//     writeInterval  1;

//     log             true;

//     writeFields     false;

//     regionType          patch;
//     name      inlet;

//     operation       weightedAverage;

//     fields
//     (
//         phi
//         U
// 	p
//     );
// }

// /*
// CoV
// areaAverage
// areaIntegrate
// areaNormalAverage
// areaNormalIntegrate
// average
// max
// min
// none
// sum
// sumDirection
// sumDirectionBalance
// sumMag
// weightedAreaAverage
// weightedAverage
// */

// ///////////////////////////////////////////////////////////////////////////

// ///////////////////////////////////////////////////////////////////////////

// outMax
// {
//     type            surfaceFieldValue;
//     functionObjectLibs ("libfieldFunctionObjects.so");
//     enabled         true;

//     //writeControl     outputTime;
//     writeControl   timeStep;
//     writeInterval  1;

//     log             true;

//     writeFields     false;

//     regionType          patch;
//     name      outlet;

//     operation       max;

//     fields
//     (
//         U
// 	p
//     );
// }

///////////////////////////////////////////////////////////////////////////

};
